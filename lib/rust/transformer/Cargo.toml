[package]
name = "transformer"
version = "0.1.0"
edition = "2021"
rust-version = "1.63.0"

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html

[dependencies]
shared = { path = "../shared" }
anymap = "0.12.1"
lru = "0.8.0"
tokio = { version = "1.17.0", features = ["macros"] }
tokio-util = { version = "0.7", default-features = false, features = ["codec"] }
rayon = "1.5.3"
once_cell = "1.13.1"
async-compression = { version = "0.3.14", default-features = false, features = [
  "tokio",
  "gzip",
  "zstd",
  "stream",
] }
infer = "0.11.0"
arrow2 = { git = "https://github.com/jorgecarleitao/arrow2", features = [
  "io_avro",
  "io_avro_async",
  "io_avro_compression",
  "serde_types",
  "io_json",
] }
indexmap = "1.9.1"
apache-avro = { git = "https://github.com/shaeqahmed/avro.git", rev = "9ea65ea", features = [
  "zstandard",
  "snappy",
] }

uuid = "1.1.2"
async-stream = "0.3.3"
tokio-stream = { version = "^0.1", features = ["io-util", "net", "sync"] }
futures = "0.3"
serde = "^1.0.144"
serde_json = "^1.0.89"
serde_yaml = "0.9"
csv-async = { version = "1.2.4", features = ["with_serde", "tokio"] }
log = "^0.4"
time = "0.3.7"
lazy_static = "1.4.0"
async_once = "0.2.6"
itertools = "0.10.3"
tracing-subscriber = { version = "0.3.8", features = ["env-filter"] }
tracing = { version = "0.1.30", features = ["log"] }
# NOTE: the following crate is not part of the SDK, but it is maintained by AWS.
lambda_runtime = "0.7.0"
aws-config = "0.51.0"
# We are using the Amazon Simple Storage Service (Amazon S3) crate in this example,
# but you can use any SDK crate in your Lambda code.
aws-sdk-s3 = "0.21.0"
aws-sdk-sns = "0.21.0"
aws_lambda_events = "0.7.0"
walkdir = "2.3.2"
anyhow = "1.0.53"
config = { version = "0.13.1", features = ["yaml"] }

tikv-jemallocator = { version = "0.5.0" }

# VRL related dependencies
## enrichment
arc-swap = { version = "1.5.1", default-features = false }
dyn-clone = { version = "1.0.9", default-features = false }
chrono = { version = "0.4.19", default-features = false }

# VRL v0.24.1
value = { git = "https://github.com/vectordotdev/vector", rev = "8935681" }
vrl = { git = "https://github.com/vectordotdev/vector", rev = "8935681" }
vrl-stdlib = { git = "https://github.com/vectordotdev/vector", rev = "8935681" }

# wierd issue with 'alloc' missing from pest's Parser macro used in vrl requires reimporting with std to work...
pest = { version = "2.2.1", default-features = false, features = ["std"] }
pest_derive = { version = "2.2.1", default-features = false, features = [
  "std",
] }

http = "0.2.8"
flame = "0.2.2"

[features]
# We could choose to enable any project dependencies marked as `optional = true`
# here, but in this case it simply serves as a config flag that we use in code.
#
# See https://stackoverflow.com/a/27634313/10237506 for more info.
my-dev-feature = []
my-prod-feature = []
